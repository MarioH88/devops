name: Smart Auto-Deploy with Approval Control

on:
  push:
    branches: [ main ]
  pull_request:
    types: [closed]

env:
  PROJECT_ID: gen-lang-client-0502058841
  SERVICE: devops-backup
  REGION: europe-west1

jobs:
  # Security check for direct pushes by non-owners
  validate-push:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.actor != 'MarioH88'
    steps:
      - name: Block Unauthorized Push
        run: |
          echo "ðŸš¨ BLOCKED: Only @MarioH88 can push directly to main"
          echo "Please use Pull Request workflow instead"
          exit 1

  # AUTO-DEPLOY: Mario's direct pushes deploy immediately (no approval needed)
  owner-auto-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.actor == 'MarioH88'
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Owner Auto-Deploy
        run: |
          echo "ðŸš€ AUTO-DEPLOY: @MarioH88 direct push"
          echo "No approval needed - deploying immediately..."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
          flags: '--allow-unauthenticated --port=8080 --memory=1Gi --cpu=1 --max-instances=10 --min-instances=0'

      - name: Auto-Deploy Success
        run: |
          echo "âœ… AUTO-DEPLOYMENT COMPLETED"
          echo "URL: ${{ steps.deploy.outputs.url }}"
          echo "Auto-deployed by: @MarioH88"

  # MANUAL APPROVAL: Collaborator PRs require manual approval before deploy
  collaborator-approval-deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    # Use production environment which requires manual approval
    environment: 
      name: production
      url: https://devops-backup-830872191496.europe-west1.run.app
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Manual Approval Required
        run: |
          echo "ðŸ”’ MANUAL APPROVAL REQUIRED"
          echo "Collaborator PR merged - waiting for @MarioH88 approval"
          echo "PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}"

      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
          flags: '--allow-unauthenticated --port=8080 --memory=1Gi --cpu=1 --max-instances=10 --min-instances=0'

      - name: Approved Deployment Success
        run: |
          echo "âœ… APPROVED DEPLOYMENT COMPLETED"
          echo "URL: ${{ steps.deploy.outputs.url }}"
          echo "Approved and deployed by: @MarioH88"