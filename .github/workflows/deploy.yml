name: Auto Deploy with Manual Approval

on:
  push:
    branches: [ main ]
  pull_request:
    types: [closed]

env:
  PROJECT_ID: gen-lang-client-0502058841
  SERVICE: devops-backup
  REGION: europe-west1

jobs:
  # Deploy: Only when PR is merged or direct push by owner
  deploy:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && github.actor == 'MarioH88') ||
      (github.event_name == 'pull_request' && 
       github.event.pull_request.merged == true &&
       github.event.pull_request.base.ref == 'main')
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Deployment Authorization
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "üöÄ DIRECT PUSH DEPLOY: Emergency push by @MarioH88"
            echo "‚ö†Ô∏è  Consider using PR workflow for better tracking"
          else
            echo "‚úÖ PR MERGE DEPLOY: Approved and merged"
            echo "PR #${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}"
            echo "Merged by: ${{ github.actor }}"
          fi
          echo "Deploying to production..."

      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Configure Docker to use gcloud as a credential helper
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
          flags: '--allow-unauthenticated --port=8080 --memory=1Gi --cpu=1 --max-instances=10 --min-instances=0'

      - name: Deployment Success
        run: |
          echo "üöÄ DEPLOYMENT SUCCESSFUL"
          echo "URL: ${{ steps.deploy.outputs.url }}"
          echo "Deployed by: ${{ github.actor }}"
          echo "Commit: ${{ github.sha }}"
